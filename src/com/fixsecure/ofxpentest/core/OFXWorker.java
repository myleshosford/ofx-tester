

package com.fixsecure.ofxpentest.core;

import java.util.concurrent.ExecutionException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JEditorPane;
import javax.swing.SwingWorker;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.util.EntityUtils;


/**
 *
 * @author Myles Hosford
 */
public class OFXWorker extends SwingWorker<String, String> {

    private HttpClient httpclient;
    private String endpoint;
    private String requestString;
    private final JEditorPane jEditorPane2;
    
    public OFXWorker(OFXRequestResponse reqres, JEditorPane pane) {
        
        httpclient =  OFXHttpClient.getClient(reqres.isIsActive(), reqres.getProxyHostname(), reqres.getProxyPort());
        requestString = reqres.getRequest();
        endpoint = reqres.getEndpoint();
        this.jEditorPane2 = pane;
    }
   
    
    @Override
    protected String doInBackground() throws Exception {

        HttpPost httpPost = new HttpPost(endpoint);
        HttpEntity e = new StringEntity(requestString);
        httpPost.setEntity(e);
        
        /*
         The following code is used for adding name value pairs to the POST request
                 List <NameValuePair> nvps = new ArrayList <NameValuePair>();
                nvps.add(new BasicNameValuePair("username", "vip"));
                nvps.add(new BasicNameValuePair("password", "secret"));
                httpPost.setEntity(new UrlEncodedFormEntity(nvps));

        */
              
       HttpResponse response2 = httpclient.execute(httpPost);       
        return EntityUtils.toString(response2.getEntity());
    }
    
    
    @Override
        protected void done() { 
        try {                
            jEditorPane2.setText(get());
        } catch (InterruptedException ex) {
            Logger.getLogger(OFXWorker.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ExecutionException ex) {
            Logger.getLogger(OFXWorker.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    
    
}

    
